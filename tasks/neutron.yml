---
- name: Install Neutron
  yum: name={{ item }} state=latest
  with_items:
    - openstack-neutron
    - openstack-neutron-linuxbridge
    - ebtables
    - ipset

- name: Check if neutron.conf file already exist
  stat: path=/etc/neutron/neutron.conf
  register: neutron_conf_state

- name: Copy neutron template file
  template: src={{ item.src }} dest={{ item.dest }} backup=yes
  with_items:
    - { src: 'neutron.conf.j2', dest: '/etc/neutron/neutron.conf' }
  when: neutron_conf_state.stat.isreg is not defined

- name: Check if ml2_conf.conf file already exist
  stat: path=/etc/neutron/neutron.conf
  register: ml2_conf_state

- name: Deploy ml2_conf configuration file from templates
  template: src={{ item.src }} dest={{ item.dest }} mode=0640 owner=root group=neutron backup=yes
  with_items:
    - { src: 'neutron/ml2_conf.ini.j2', dest: '/etc/neutron/plugins/ml2/ml2_conf.ini' }
  when: ml2_conf_state.stat.isreg is not defined

- name: Check if l3_agent.conf file already exist
  stat: path=/etc/neutron/l3_agent.ini
  register: l3_agent_conf_state

- name: Deploy l3_agent configuration file from templates
  template: src={{ item.src }} dest={{ item.dest }} mode=0640 owner=root group=neutron backup=yes
  with_items:
    - { src: 'neutron/l3_agent.ini.j2', dest: '/etc/neutron/l3_agent.ini' }
  when: l3_agent_conf_state.stat.isreg is not defined

- name: Check if dhcp_agent.conf file already exist
  stat: path=/etc/neutron/dhcp_agent.ini
  register: dhcp_agent_conf_state

- name: Deploy dhcp_agent configuration file from templates
  template: src={{ item.src }} dest={{ item.dest }} mode=0640 owner=root group=neutron backup=yes
  with_items:
    - { src: 'neutron/dhcp_agent.ini.j2', dest: '/etc/neutron/dhcp_agent.ini' }
  when: dhcp_agent_conf_state.stat.isreg is not defined

- name: Check if metadata_agent.conf file already exist
  stat: path=/etc/neutron/metadata_agent.ini
  register: neutron_conf_state

- name: Deploy metadata_agent configuration file from templates
  template: src={{ item.src }} dest={{ item.dest }} mode=0640 owner=root group=neutron backup=yes
  with_items:
    - { src: 'neutron/metadata_agent.ini.j2', dest: '/etc/neutron/metadata_agent.ini' }
  when: neutron_conf_state.stat.isreg is not defined

#  in ml2:
#   bridge_mappings = external:br-ex
#  in neutron:
#  nova_region_name = RegionOne
#nova_admin_username = nova
#nova_admin_password = openstack
#nova_admin_auth_url = {{ openstack_ath_url }}/v2

- name: Start linuxbridge service
  service: name={{ item }} enabled=yes state=started
  with_items:
    - neutron-linuxbridge-agent

- name: Restart nova compute service
  service: name={{ item }}state=restarted
  with_items:
    - openstack-nova-compute